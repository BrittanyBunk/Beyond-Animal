Notes:
* Sed isn't able to work with url's. Url's need to be curl'd and then piped to be able to do so, 
* like: curl "website" | sed (part to cut) | grep term
* Using a : will rewrite a file, while / will print it out on the screen.

I created a file called hi.txt. In it I wrote: mary had a little lamb. This is what it looks like when I use sed:

remove before text:
sed 's/.*had//' hi.txt
 a little lamb

remove after text:
sed 's/little.*//' hi.txt
mary had a

remove both before and after text:
 sed 's/.*had//; s/little.*//' hi.txt
 a
 
 >> above are fine
 

won't take ' for quotes (put them around little l):
sed -e 's/.*a//; s/'little l'.*//' hi.txt
sed: -e expression #1, char 17: unterminated `s' command

>> that's what you should get because you can't mix-in quotes inside of quotes unless you escape them
>> not sure why you are trying to put ' in there though
>> if you are trying to chain sed, do it the same way you just did:
sed -e 's/.*a// ; s/little l//' hi.txt
giving mb
or using pipes:
cat hi.txt | sed -e 's/.*a//' | sed -e 's/little l//'
>> but note that the first sed wipes out everything other than the mb:
sed -e 's/.*a//' gives mb
>> so i'm not sure what you are trying to actually



won't take " as quotes either (around the same text):
sed -e 's/.*a//; s/"little l".*//' hi.txt
sed: can't read hi.txt: No such file or directory

>> you need to escape " remember - they are special characters for regex


only / works in sed for reading url's. : doesn't work (because it's trying to rewrite a file it doesn't have - url's can't be changed):
curl "https://finance.yahoo.com/quote/SPLK/profile" | sed -i -e "s:corporate .*::g" | grep -ic dairy
curl: (23) Failed writing body (866 != 1300)

>> exactly!!
>> so don't use -i with sed

>> here's what's happening:
sed -i -e "s:corporate .*::g" or sed -i -e "s/corporate .*//g"
>> removes everything after corporate
>> now if dairy appears after corporate, it's gone and so you'll grep -ic 0

>> try this for fun:
curl "https://finance.yahoo.com/quote/SPLK/profile" | wc -m 
>> (wc -m gives you the number of characters) = 630748
>> now do it your way:
curl "https://finance.yahoo.com/quote/SPLK/profile" | sed -i -e "s:corporate .*::g" | wc -m 
>> (you get 174306 characters - you've wiped out most of the file)
>> btw, the ::g or //g isn't a g!! it stands for global meaning sed will wipe out things everywhere it can


Using \ alone doesn't work:
curl "https://finance.yahoo.com/quote/SPLK/profile" | sed 's/corporate\-g.*//' | grep -ic dairy
1 <- should be 0

>> no it shouldn't
>> here's proof:
curl "https://finance.yahoo.com/quote/SPLK/profile" | grep -ic dairy
>> that gives you 1 !!!!
>> so the word dairy is in that page!!

>> what you've done with s:corporate .*::g is wipe out the part that has dairy
>> with sed 's/corporate\-g.*//' that doesn't happen.


